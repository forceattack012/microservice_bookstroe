services:
  mongo-db:
    container_name: book-mongo
    restart: always
    image: mongo
    ports:
      - 27017:27017

  redis-db:
    container_name: bookstore-redis
    restart: always
    image:  redis
    ports:
      - 6370:6379

  pg-db:
    container_name: bookstore-postgres
    restart: always
    image:  postgres
    ports:
      - 5433:5432
    environment:
      - POSTGRES_DB=bookstore
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=abcd1234

  # kong-database:
  #   image: postgres:13
  #   container_name: kong-database
  #   networks:
  #     - bookstore-net
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     POSTGRES_USER: kong
  #     POSTGRES_DB: kong
  #     POSTGRES_PASSWORD: abcd1234

  # kong-migrations:
  #   image: kong/kong-gateway:3.1.1.3
  #   platform: ${TARGETPLATFORM:-linux/amd64}
  #   command: "kong migrations bootstrap"
  #   container_name: kong-migrations
  #   networks:
  #     - bookstore-net
  #   environment:
  #     KONG_DATABASE: postgres
  #     KONG_PG_HOST: kong-database
  #     KONG_PG_PASSWORD: abcd1234
  #     KONG_PASSWORD: test
  #   depends_on:
  #     - kong-database

  # kong-gateway:
  #   image: kong/kong-gateway:3.1.1.3
  #   platform: ${TARGETPLATFORM:-linux/amd64}
  #   container_name: kong-gateway
  #   networks:
  #     - bookstore-net
  #   ports:
  #     - "8000:8000"
  #     - "8443:8443"
  #     - "8001:8001"
  #     - "8444:8444"
  #     - "8002:8002"
  #     - "8445:8445"
  #     - "8003:8003"
  #     - "8004:8004"
  #   environment:
  #     KONG_DATABASE: postgres
  #     KONG_PG_HOST: kong-database
  #     KONG_PG_USER: kong
  #     KONG_PG_PASSWORD: abcd1234
  #     KONG_PROXY_ACCESS_LOG: /dev/stdout
  #     KONG_ADMIN_ACCESS_LOG: /dev/stdout
  #     KONG_PROXY_ERROR_LOG: /dev/stderr
  #     KONG_ADMIN_ERROR_LOG: /dev/stderr
  #     KONG_ADMIN_LISTEN: 0.0.0.0:8001
  #     KONG_ADMIN_GUI_URL: http://localhost:9000
  #     KONG_LICENSE_DATA:
  #   depends_on:
  #     - kong-database
  #     - kong-migrations

  # konga:
  #   image: pantsel/konga
  #   ports:
  #     - "1337:1337"
  #   environment:
  #     - DB_ADAPTER=postgres
  #     - DB_HOST=kong-database
  #     - DB_USER=kong
  #     - DB_PASSWORD=abcd1234
  #     - DB_DATABASE=postgres
  #     - KONGA_HOOK_TIMEOUT=120000
  #     - NODE_ENV=production
  #   networks:
  #     - bookstore-net
  #   depends_on:
  #     - kong-database

  elasticsearch:
    container_name: es-container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.1
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elastic

  kibana:
    image: kibana:8.6.1
    environment:
      - ELASTICSEARCH_HOSTS=http://es-container:9200
    ports:
      - target: 5601
        published: 5601
    depends_on:
      - elasticsearch
    networks:
      - elastic  

  book-api:
    container_name: book.api
    restart: always
    image: ${DOCKER_REGISTRY-}book.api
    depends_on:
      - elasticsearch
      - mongo-db
    build:
      context: backend
      dockerfile: dockerfile.book
    ports:
      - 8080:8080
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "BookStoreDatabase:ConnectionString=mongodb://mongo-db:27017"

  basket-api:
    container_name: basket.api
    restart: always
    image: ${DOCKER_REGISTRY-}basket.api
    depends_on:
      - elasticsearch
      - redis-db
    build:
      context: backend
      dockerfile: dockerfile.basket
    ports:
      - 8081:8081
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:Redis=redis-db:6379" #internal port's redis
    
  order-api:
    container_name: order.api
    restart: always
    image: ${DOCKER_REGISTRY-}order.api
    depends_on:
      - elasticsearch
      - pg-db
    build:
      context: backend
      dockerfile: dockerfile.order
    ports:
      - 8082:8082
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:OrderContext=Host=pg-db;Database=bookstore;Port=5432;Username=admin;Password=abcd1234"

networks:
  bookstore-net:
  elastic:
    name: elastic
    driver: bridge

volumes:
  elasticsearch-data:
    driver: local